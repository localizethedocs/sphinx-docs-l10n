# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-03 20:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../extdev/logging.rst:4
msgid "Logging API"
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.getLogger:1
msgid "Get logger wrapped by :class:`sphinx.util.logging.SphinxLoggerAdapter`."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.getLogger:3
msgid ""
"Sphinx logger always uses ``sphinx.*`` namespace to be independent from "
"settings of root logger.  It ensures logging is consistent even if a third-"
"party extension or imported application resets logger settings."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.getLogger:7
msgid "Example usage::"
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.getLogger:9
msgid ""
">>> from sphinx.util import logging\n"
">>> logger = logging.getLogger(__name__)\n"
">>> logger.info('Hello, this is an extension!')\n"
"Hello, this is an extension!"
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.SphinxLoggerAdapter:1
msgid "LoggerAdapter allowing ``type`` and ``subtype`` keywords."
msgstr ""

#: ../../../extdev/logging.rst:16
msgid ""
"Logs a message on this logger with the specified level. Basically, the "
"arguments are as with python's logging module."
msgstr ""

#: ../../../extdev/logging.rst:19 ../../../extdev/logging.rst:48
msgid "In addition, Sphinx logger supports following keyword arguments:"
msgstr ""

#: ../../../extdev/logging.rst:21
msgid "**type**, ***subtype***"
msgstr ""

#: ../../../extdev/logging.rst:22
msgid ""
"Categories of warning logs.  It is used to suppress warnings by :confval:"
"`suppress_warnings` setting."
msgstr ""

#: ../../../extdev/logging.rst:25 ../../../extdev/logging.rst:54
msgid "**location**"
msgstr ""

#: ../../../extdev/logging.rst:26
msgid ""
"Where the warning happened.  It is used to include the path and line number "
"in each log.  It allows docname, tuple of docname and line number and nodes::"
msgstr ""

#: ../../../extdev/logging.rst:30
msgid ""
"logger = sphinx.util.logging.getLogger(__name__)\n"
"logger.warning('Warning happened!', location='index')\n"
"logger.warning('Warning happened!', location=('chapter1/index', 10))\n"
"logger.warning('Warning happened!', location=some_node)"
msgstr ""

#: ../../../extdev/logging.rst:35 ../../../extdev/logging.rst:58
msgid "**color**"
msgstr ""

#: ../../../extdev/logging.rst:36
msgid ""
"The color of logs.  By default, error level logs are colored as "
"``\"darkred\"``, critical level ones is not colored, and warning level ones "
"are colored as ``\"red\"``."
msgstr ""

#: ../../../extdev/logging.rst:45
msgid ""
"Logs a message to this logger with the specified level. Basically, the "
"arguments are as with python's logging module."
msgstr ""

#: ../../../extdev/logging.rst:50
msgid "**nonl**"
msgstr ""

#: ../../../extdev/logging.rst:51
msgid ""
"If true, the logger does not fold lines at the end of the log message. The "
"default is ``False``."
msgstr ""

#: ../../../extdev/logging.rst:55
msgid ""
"Where the message emitted.  For more detail, see :meth:`SphinxLoggerAdapter."
"warning`."
msgstr ""

#: ../../../extdev/logging.rst:59
msgid ""
"The color of logs.  By default, info and verbose level logs are not colored, "
"and debug level ones are colored as ``\"darkgray\"``."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.pending_logging:1
msgid "Context manager to postpone logging all logs temporarily."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.pending_logging:3
#: sphinx.util.logging.prefixed_warnings:3
msgid "For example::"
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.pending_logging:5
msgid ""
">>> with pending_logging():\n"
">>>     logger.warning('Warning message!')  # not flushed yet\n"
">>>     some_long_process()\n"
">>>\n"
"Warning message!  # the warning is flushed here"
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.pending_warnings:1
msgid "Context manager to postpone logging warnings temporarily."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.pending_warnings:3
msgid "Similar to :func:`pending_logging`."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.prefixed_warnings:1
msgid ""
"Context manager to prepend prefix to all warning log records temporarily."
msgstr ""

#: ../../../../../../.conda/lib/python3.13/site-packages/sphinx/util/logging.py:docstring
#: of sphinx.util.logging.prefixed_warnings:5
msgid ""
">>> with prefixed_warnings(\"prefix:\"):\n"
">>>     logger.warning('Warning message!')  # => prefix: Warning message!"
msgstr ""
