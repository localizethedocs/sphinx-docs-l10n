# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-03 20:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../faq.rst:4
msgid "Sphinx FAQ"
msgstr "Sphinx 常見問題集"

#: ../../../faq.rst:6
msgid ""
"This is a list of Frequently Asked Questions about Sphinx.  Feel free to "
"suggest new entries!"
msgstr ""

#: ../../../faq.rst:10
msgid "How do I..."
msgstr "我要如何..."

#: ../../../faq.rst:12
msgid "... create PDF files without LaTeX?"
msgstr ""

#: ../../../faq.rst:13
msgid ""
"`rinohtype`_ provides a PDF builder that can be used as a drop-in "
"replacement for the LaTeX builder."
msgstr ""

#: ../../../faq.rst:18
msgid "... get section numbers?"
msgstr ""

#: ../../../faq.rst:19
msgid ""
"They are automatic in LaTeX output; for HTML, give a ``:numbered:`` option "
"to the :rst:dir:`toctree` directive where you want to start numbering."
msgstr ""

#: ../../../faq.rst:22
msgid "... customize the look of the built HTML files?"
msgstr ""

#: ../../../faq.rst:23
msgid "Use themes, see :doc:`/usage/theming`."
msgstr "使用主題，請參見 :doc:`usage/theming`\\ 。"

#: ../../../faq.rst:25
msgid "... add global substitutions or includes?"
msgstr ""

#: ../../../faq.rst:26
msgid ""
"Add them in the :confval:`rst_prolog` or :confval:`rst_epilog` config value."
msgstr ""

#: ../../../faq.rst:28
msgid "... display the whole TOC tree in the sidebar?"
msgstr ""

#: ../../../faq.rst:29
msgid ""
"Use the :data:`toctree` callable in a custom layout template, probably in "
"the ``sidebartoc`` block."
msgstr ""

#: ../../../faq.rst:32
msgid "... write my own extension?"
msgstr "... 編寫我自己的擴充套件？"

#: ../../../faq.rst:33
msgid "See the :ref:`extension-tutorials-index`."
msgstr "請參見 :ref:`extension-tutorials-index`。"

#: ../../../faq.rst:35
msgid "... convert from my existing docs using MoinMoin markup?"
msgstr ""

#: ../../../faq.rst:36
msgid ""
"The easiest way is to convert to xhtml, then convert `xhtml to "
"reStructuredText`_. You'll still need to mark up classes and such, but the "
"headings and code examples come through cleanly."
msgstr ""

#: ../../../faq.rst:40
msgid ""
"For many more extensions and other contributed stuff, see the sphinx-"
"contrib_ repository."
msgstr ""

#: ../../../faq.rst:48
msgid "Using Sphinx with..."
msgstr ""

#: ../../../faq.rst:50
msgid "Read the Docs"
msgstr ""

#: ../../../faq.rst:51
msgid ""
"`Read the Docs <https://readthedocs.org>`_ is a documentation hosting "
"service based around Sphinx.  They will host sphinx documentation, along "
"with supporting a number of other features including version support, PDF "
"generation, and more. The `Getting Started`_ guide is a good place to start."
msgstr ""

#: ../../../faq.rst:56
msgid "Epydoc"
msgstr ""

#: ../../../faq.rst:57
msgid ""
"There's a third-party extension providing an `api role`_ which refers to "
"Epydoc's API docs for a given identifier."
msgstr ""

#: ../../../faq.rst:60
msgid "Doxygen"
msgstr ""

#: ../../../faq.rst:61
msgid ""
"Michael Jones has developed a reStructuredText/Sphinx bridge to doxygen "
"called `breathe <https://github.com/breathe-doc/breathe/tree/master>`_."
msgstr ""

#: ../../../faq.rst:64
msgid "SCons"
msgstr ""

#: ../../../faq.rst:65
msgid ""
"Glenn Hutchings has written a SCons build script to build Sphinx "
"documentation; it is hosted here: https://bitbucket-archive.softwareheritage."
"org/projects/zo/zondo/sphinx-scons.html"
msgstr ""

#: ../../../faq.rst:69
msgid "PyPI"
msgstr ""

#: ../../../faq.rst:70
msgid ""
"Jannis Leidel wrote a `setuptools command <https://pypi.org/project/Sphinx-"
"PyPI-upload/>`_ that automatically uploads Sphinx documentation to the PyPI "
"package documentation area at https://pythonhosted.org/."
msgstr ""

#: ../../../faq.rst:75
msgid "GitHub Pages"
msgstr ""

#: ../../../faq.rst:76
msgid ""
"Please add :py:mod:`sphinx.ext.githubpages` to your project.  It allows you "
"to publish your document in GitHub Pages.  It generates helper files for "
"GitHub Pages on building HTML document automatically."
msgstr ""

#: ../../../faq.rst:80
msgid "MediaWiki"
msgstr ""

#: ../../../faq.rst:81
msgid "See `sphinx-wiki`_, a project by Kevin Dunn."
msgstr ""

#: ../../../faq.rst:85
msgid "Google Analytics"
msgstr ""

#: ../../../faq.rst:86
msgid "You can use a custom ``layout.html`` template, like this:"
msgstr ""

#: ../../../faq.rst:88
msgid ""
"{% extends \"!layout.html\" %}\n"
"\n"
"{%- block extrahead %}\n"
"{{ super() }}\n"
"<script>\n"
"  var _gaq = _gaq || [];\n"
"  _gaq.push(['_setAccount', 'XXX account number XXX']);\n"
"  _gaq.push(['_trackPageview']);\n"
"</script>\n"
"{% endblock %}\n"
"\n"
"{% block footer %}\n"
"{{ super() }}\n"
"<div class=\"footer\">This page uses <a href=\"https://analytics.google.com/"
"\">\n"
"Google Analytics</a> to collect statistics. You can disable it by blocking\n"
"the JavaScript coming from www.google-analytics.com.\n"
"<script>\n"
"  (function() {\n"
"    var ga = document.createElement('script');\n"
"    ga.src = ('https:' == document.location.protocol ?\n"
"              'https://ssl' : 'https://www') + '.google-analytics.com/ga."
"js';\n"
"    ga.setAttribute('async', 'true');\n"
"    document.documentElement.firstChild.appendChild(ga);\n"
"  })();\n"
"</script>\n"
"</div>\n"
"{% endblock %}"
msgstr ""
"{% extends \"!layout.html\" %}\n"
"\n"
"{%- block extrahead %}\n"
"{{ super() }}\n"
"<script>\n"
"  var _gaq = _gaq || [];\n"
"  _gaq.push(['_setAccount', 'XXX account number XXX']);\n"
"  _gaq.push(['_trackPageview']);\n"
"</script>\n"
"{% endblock %}\n"
"\n"
"{% block footer %}\n"
"{{ super() }}\n"
"<div class=\"footer\">This page uses <a href=\"https://analytics.google.com/"
"\">\n"
"Google Analytics</a> to collect statistics. You can disable it by blocking\n"
"the JavaScript coming from www.google-analytics.com.\n"
"<script>\n"
"  (function() {\n"
"    var ga = document.createElement('script');\n"
"    ga.src = ('https:' == document.location.protocol ?\n"
"              'https://ssl' : 'https://www') + '.google-analytics.com/ga."
"js';\n"
"    ga.setAttribute('async', 'true');\n"
"    document.documentElement.firstChild.appendChild(ga);\n"
"  })();\n"
"</script>\n"
"</div>\n"
"{% endblock %}"

#: ../../../faq.rst:119
msgid "Google Search"
msgstr "Google 搜尋"

#: ../../../faq.rst:120
msgid ""
"To replace Sphinx's built-in search function with Google Search, proceed as "
"follows:"
msgstr ""

#: ../../../faq.rst:123
msgid ""
"Go to https://cse.google.com/cse/all to create the Google Search code "
"snippet."
msgstr ""

#: ../../../faq.rst:126
msgid ""
"Copy the code snippet and paste it into ``_templates/searchbox.html`` in "
"your Sphinx project:"
msgstr ""

#: ../../../faq.rst:129
msgid ""
"<div>\n"
"   <h3>{{ _('Quick search') }}</h3>\n"
"   <script>\n"
"      (function() {\n"
"         var cx = '......';\n"
"         var gcse = document.createElement('script');\n"
"         gcse.async = true;\n"
"         gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\n"
"         var s = document.getElementsByTagName('script')[0];\n"
"         s.parentNode.insertBefore(gcse, s);\n"
"      })();\n"
"   </script>\n"
"  <gcse:search></gcse:search>\n"
"</div>"
msgstr ""

#: ../../../faq.rst:146
msgid ""
"Add ``searchbox.html`` to the :confval:`html_sidebars` configuration value."
msgstr "將 ``searchbox.html`` 增添到 :confval:`html_sidebars` 組態值。"

#: ../../../faq.rst:154
msgid "Sphinx vs. Docutils"
msgstr ""

#: ../../../faq.rst:156
msgid ""
"tl;dr: *docutils* converts reStructuredText to multiple output formats. "
"Sphinx builds upon docutils to allow construction of cross-referenced and "
"indexed bodies of documentation."
msgstr ""

#: ../../../faq.rst:160
msgid ""
"`docutils`__ is a text processing system for converting plain text "
"documentation into other, richer formats. As noted in the `docutils "
"documentation`__, docutils uses *readers* to read a document, *parsers* for "
"parsing plain text formats into an internal tree representation made up of "
"different types of *nodes*, and *writers* to output this tree in various "
"document formats.  docutils provides parsers for one plain text format - "
"`reStructuredText`__ - though other, *out-of-tree* parsers have been "
"implemented including Sphinx's :doc:`Markdown parser </usage/markdown>`. On "
"the other hand, it provides writers for many different formats including "
"HTML, LaTeX, man pages, Open Document Format and XML."
msgstr ""

#: ../../../faq.rst:171
msgid ""
"docutils exposes all of its functionality through a variety of `front-end "
"tools`__, such as ``rst2html``, ``rst2odt`` and ``rst2xml``. Crucially "
"though, all of these tools, and docutils itself, are concerned with "
"individual documents.  They don't support concepts such as cross-"
"referencing, indexing of documents, or the construction of a document "
"hierarchy (typically manifesting in a table of contents)."
msgstr ""

#: ../../../faq.rst:178
msgid ""
"Sphinx builds upon docutils by harnessing docutils' readers and parsers and "
"providing its own :doc:`/usage/builders/index`. As a result, Sphinx wraps "
"some of the *writers* provided by docutils. This allows Sphinx to provide "
"many features that would simply not be possible with docutils, such as those "
"outlined above."
msgstr ""

#: ../../../faq.rst:193
msgid "Epub info"
msgstr ""

#: ../../../faq.rst:195
msgid "The following list gives some hints for the creation of epub files:"
msgstr ""

#: ../../../faq.rst:197
msgid ""
"Split the text into several files. The longer the individual HTML files are, "
"the longer it takes the ebook reader to render them.  In extreme cases, the "
"rendering can take up to one minute."
msgstr ""

#: ../../../faq.rst:201
msgid "Try to minimize the markup.  This also pays in rendering time."
msgstr ""

#: ../../../faq.rst:203
msgid ""
"For some readers you can use embedded or external fonts using the CSS "
"``@font-face`` directive.  This is *extremely* useful for code listings "
"which are often cut at the right margin.  The default Courier font (or "
"variant) is quite wide and you can only display up to 60 characters on a "
"line.  If you replace it with a narrower font, you can get more characters "
"on a line.  You may even use `FontForge <https://fontforge.github.io/>`_ and "
"create narrow variants of some free font.  In my case I get up to 70 "
"characters on a line."
msgstr ""

#: ../../../faq.rst:212
msgid "You may have to experiment a little until you get reasonable results."
msgstr ""

#: ../../../faq.rst:214
msgid ""
"Test the created epubs. You can use several alternatives.  The ones I am "
"aware of are Epubcheck_, Calibre_, FBreader_ (although it does not render "
"the CSS), and Bookworm_.  For Bookworm, you can download the source from "
"https://code.google.com/archive/p/threepress and run your own local server."
msgstr ""

#: ../../../faq.rst:219
msgid ""
"Large floating divs are not displayed properly. If they cover more than one "
"page, the div is only shown on the first page. In that case you can copy "
"the :file:`epub.css` from the ``sphinx/themes/epub/static/`` directory to "
"your local ``_static/`` directory and remove the float settings."
msgstr ""

#: ../../../faq.rst:225
msgid ""
"Files that are inserted outside of the ``toctree`` directive must be "
"manually included. This sometimes applies to appendixes, e.g. the glossary "
"or the indices.  You can add them with the :confval:`epub_post_files` option."
msgstr ""

#: ../../../faq.rst:229
msgid ""
"The handling of the epub cover page differs from the reStructuredText "
"procedure which automatically resolves image paths and puts the images into "
"the ``_images`` directory.  For the epub cover page put the image in the :"
"confval:`html_static_path` directory and reference it with its full path in "
"the :confval:`epub_cover` config option."
msgstr ""

#: ../../../faq.rst:235
msgid ""
"kindlegen_ command can convert from epub3 resulting file to ``.mobi`` file "
"for Kindle. You can get ``yourdoc.mobi`` under ``_build/epub`` after the "
"following command:"
msgstr ""

#: ../../../faq.rst:239
msgid ""
"$ make epub\n"
"$ kindlegen _build/epub/yourdoc.epub"
msgstr ""
"$ make epub\n"
"$ kindlegen _build/epub/yourdoc.epub"

#: ../../../faq.rst:244
msgid ""
"The kindlegen command doesn't accept documents that have section titles "
"surrounding ``toctree`` directive:"
msgstr ""

#: ../../../faq.rst:247
msgid ""
"Section Title\n"
"=============\n"
"\n"
".. toctree::\n"
"\n"
"   subdocument\n"
"\n"
"Section After Toc Tree\n"
"======================"
msgstr ""
"Section Title\n"
"=============\n"
"\n"
".. toctree::\n"
"\n"
"   subdocument\n"
"\n"
"Section After Toc Tree\n"
"======================"

#: ../../../faq.rst:259
msgid ""
"kindlegen assumes all documents order in line, but the resulting document "
"has complicated order for kindlegen::"
msgstr ""

#: ../../../faq.rst:262
msgid "``parent.xhtml`` -> ``child.xhtml`` -> ``parent.xhtml``"
msgstr "``parent.xhtml`` -> ``child.xhtml`` -> ``parent.xhtml``"

#: ../../../faq.rst:264
msgid "If you get the following error, fix your document structure:"
msgstr ""

#: ../../../faq.rst:266
msgid ""
"Error(prcgen):E24011: TOC section scope is not included in the parent "
"chapter:(title)\n"
"Error(prcgen):E24001: The table of content could not be built."
msgstr ""

#: ../../../faq.rst:280
msgid "Texinfo info"
msgstr ""

#: ../../../faq.rst:282
msgid ""
"There are two main programs for reading Info files, ``info`` and GNU Emacs.  "
"The ``info`` program has less features but is available in most Unix "
"environments and can be quickly accessed from the terminal.  Emacs provides "
"better font and color display and supports extensive customization (of "
"course)."
msgstr ""

#: ../../../faq.rst:290
msgid "Displaying Links"
msgstr ""

#: ../../../faq.rst:292
msgid ""
"One noticeable problem you may encounter with the generated Info files is "
"how references are displayed.  If you read the source of an Info file, a "
"reference to this section would look like::"
msgstr ""

#: ../../../faq.rst:296
msgid "* note Displaying Links: target-id"
msgstr ""

#: ../../../faq.rst:298
msgid ""
"In the stand-alone reader, ``info``, references are displayed just as they "
"appear in the source.  Emacs, on the other-hand, will by default replace "
"``*note:`` with ``see`` and hide the ``target-id``.  For example:"
msgstr ""

#: ../../../faq.rst:302
msgid ":ref:`texinfo-links`"
msgstr ""

#: ../../../faq.rst:304
msgid ""
"One can disable generation of the inline references in a document with :"
"confval:`texinfo_cross_references`.  That makes an info file more readable "
"with stand-alone reader (``info``)."
msgstr ""

#: ../../../faq.rst:308
msgid ""
"The exact behavior of how Emacs displays references is dependent on the "
"variable ``Info-hide-note-references``.  If set to the value of ``hide``, "
"Emacs will hide both the ``*note:`` part and the ``target-id``.  This is "
"generally the best way to view Sphinx-based documents since they often make "
"frequent use of links and do not take this limitation into account.  "
"However, changing this variable affects how all Info documents are displayed "
"and most do take this behavior into account."
msgstr ""

#: ../../../faq.rst:316
msgid ""
"If you want Emacs to display Info files produced by Sphinx using the value "
"``hide`` for ``Info-hide-note-references`` and the default value for all "
"other Info files, try adding the following Emacs Lisp code to your start-up "
"file, ``~/.emacs.d/init.el``."
msgstr ""

#: ../../../faq.rst:321
msgid ""
"(defadvice info-insert-file-contents (after\n"
"                                      sphinx-info-insert-file-contents\n"
"                                      activate)\n"
"  \"Hack to make `Info-hide-note-references' buffer-local and\n"
"automatically set to `hide' iff it can be determined that this file\n"
"was created from a Texinfo file generated by Docutils or Sphinx.\"\n"
"  (set (make-local-variable 'Info-hide-note-references)\n"
"       (default-value 'Info-hide-note-references))\n"
"  (save-excursion\n"
"    (save-restriction\n"
"      (widen) (goto-char (point-min))\n"
"      (when (re-search-forward\n"
"             \"^Generated by \\\\(Sphinx\\\\|Docutils\\\\)\"\n"
"             (save-excursion (search-forward \"\\x1f\" nil t)) t)\n"
"        (set (make-local-variable 'Info-hide-note-references)\n"
"             'hide)))))"
msgstr ""

#: ../../../faq.rst:342
msgid "Notes"
msgstr ""

#: ../../../faq.rst:344
msgid "The following notes may be helpful if you want to create Texinfo files:"
msgstr ""

#: ../../../faq.rst:346
msgid "Each section corresponds to a different ``node`` in the Info file."
msgstr ""

#: ../../../faq.rst:348
msgid ""
"Colons (``:``) cannot be properly escaped in menu entries and xrefs. They "
"will be replaced with semicolons (``;``)."
msgstr ""

#: ../../../faq.rst:351
msgid ""
"Links to external Info files can be created using the somewhat official URI "
"scheme ``info``.  For example::"
msgstr ""

#: ../../../faq.rst:354
msgid "info:Texinfo#makeinfo_options"
msgstr ""
