# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2021, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-03 20:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../usage/builders/index.rst:5
msgid "Builders"
msgstr "建置器"

#: ../../../usage/builders/index.rst:10
msgid ""
"These are the built-in Sphinx builders.  More builders can be added by :doc:"
"`extensions </usage/extensions/index>`."
msgstr ""

#: ../../../usage/builders/index.rst:13
msgid ""
"The builder's \"name\" must be given to the **-b** command-line option of :"
"program:`sphinx-build` to select a builder."
msgstr ""

#: ../../../usage/builders/index.rst:20
msgid ""
"This is the standard HTML builder.  Its output is a directory with HTML "
"files, complete with style sheets and optionally the reST sources.  There "
"are quite a few configuration values that customize the output of this "
"builder, see the chapter :ref:`html-options` for details."
msgstr ""

#: ../../../docstring of sphinx.builders.html.StandaloneHTMLBuilder.name:1
#: sphinx.builders.dirhtml.DirectoryHTMLBuilder.name:1
#: sphinx.builders.singlehtml.SingleFileHTMLBuilder.name:1
#: sphinxcontrib.htmlhelp.HTMLHelpBuilder.name:1
#: sphinxcontrib.qthelp.QtHelpBuilder.name:1
#: sphinxcontrib.applehelp.AppleHelpBuilder.name:1
#: sphinxcontrib.devhelp.DevhelpBuilder.name:1
#: sphinx.builders.epub3.Epub3Builder.name:1
#: sphinx.builders.latex.LaTeXBuilder.name:1
#: sphinx.builders.text.TextBuilder.name:1
#: sphinx.builders.manpage.ManualPageBuilder.name:1
#: sphinx.builders.texinfo.TexinfoBuilder.name:1
#: sphinxcontrib.serializinghtml.PickleHTMLBuilder.name:1
#: sphinxcontrib.serializinghtml.JSONHTMLBuilder.name:1
#: sphinx.builders.gettext.MessageCatalogBuilder.name:1
#: sphinx.builders.changes.ChangesBuilder.name:1
#: sphinx.builders.dummy.DummyBuilder.name:1
#: sphinx.builders.linkcheck.CheckExternalLinksBuilder.name:1
#: sphinx.builders.xml.XMLBuilder.name:1
#: sphinx.builders.xml.PseudoXMLBuilder.name:1
msgid "The builder's name, for the -b command line option."
msgstr ""

#: ../../../docstring of sphinx.builders.html.StandaloneHTMLBuilder.format:1
#: sphinx.builders.dirhtml.DirectoryHTMLBuilder.format:1
#: sphinx.builders.singlehtml.SingleFileHTMLBuilder.format:1
#: sphinxcontrib.htmlhelp.HTMLHelpBuilder.format:1
#: sphinxcontrib.qthelp.QtHelpBuilder.format:1
#: sphinxcontrib.applehelp.AppleHelpBuilder.format:1
#: sphinxcontrib.devhelp.DevhelpBuilder.format:1
#: sphinx.builders.epub3.Epub3Builder.format:1
#: sphinx.builders.latex.LaTeXBuilder.format:1
#: sphinx.builders.text.TextBuilder.format:1
#: sphinx.builders.manpage.ManualPageBuilder.format:1
#: sphinx.builders.texinfo.TexinfoBuilder.format:1
#: sphinxcontrib.serializinghtml.PickleHTMLBuilder.format:1
#: sphinxcontrib.serializinghtml.JSONHTMLBuilder.format:1
#: sphinx.builders.gettext.MessageCatalogBuilder.format:1
#: sphinx.builders.changes.ChangesBuilder.format:1
#: sphinx.builders.linkcheck.CheckExternalLinksBuilder.format:1
#: sphinx.builders.xml.XMLBuilder.format:1
#: sphinx.builders.xml.PseudoXMLBuilder.format:1
msgid "The builder's output format, or '' if no document output is produced."
msgstr ""

#: ../../../docstring of
#: sphinx.builders.html.StandaloneHTMLBuilder.supported_image_types:1
#: sphinx.builders.dirhtml.DirectoryHTMLBuilder.supported_image_types:1
#: sphinx.builders.singlehtml.SingleFileHTMLBuilder.supported_image_types:1
#: sphinxcontrib.htmlhelp.HTMLHelpBuilder.supported_image_types:1
#: sphinxcontrib.qthelp.QtHelpBuilder.supported_image_types:1
#: sphinxcontrib.applehelp.AppleHelpBuilder.supported_image_types:1
#: sphinxcontrib.devhelp.DevhelpBuilder.supported_image_types:1
#: sphinx.builders.epub3.Epub3Builder.supported_image_types:1
#: sphinx.builders.latex.LaTeXBuilder.supported_image_types:1
#: sphinx.builders.text.TextBuilder.supported_image_types:1
#: sphinx.builders.manpage.ManualPageBuilder.supported_image_types:1
#: sphinx.builders.texinfo.TexinfoBuilder.supported_image_types:1
#: sphinxcontrib.serializinghtml.PickleHTMLBuilder.supported_image_types:1
#: sphinxcontrib.serializinghtml.JSONHTMLBuilder.supported_image_types:1
#: sphinx.builders.gettext.MessageCatalogBuilder.supported_image_types:1
#: sphinx.builders.changes.ChangesBuilder.supported_image_types:1
#: sphinx.builders.dummy.DummyBuilder.supported_image_types:1
#: sphinx.builders.linkcheck.CheckExternalLinksBuilder.supported_image_types:1
#: sphinx.builders.xml.XMLBuilder.supported_image_types:1
#: sphinx.builders.xml.PseudoXMLBuilder.supported_image_types:1
msgid ""
"The list of MIME types of image formats supported by the builder. Image "
"files are searched in the order in which they appear here."
msgstr ""

#: ../../../usage/builders/index.rst:34
msgid ""
"This is a subclass of the standard HTML builder.  Its output is a directory "
"with HTML files, where each file is called ``index.html`` and placed in a "
"subdirectory named like its page name.  For example, the document ``markup/"
"rest.rst`` will not result in an output file ``markup/rest.html``, but "
"``markup/rest/index.html``.  When generating links between pages, the "
"``index.html`` is omitted, so that the URL would look like ``markup/rest/``."
msgstr ""

#: ../../../usage/builders/index.rst:52
msgid ""
"This is an HTML builder that combines the whole project in one output file. "
"(Obviously this only works with smaller projects.)  The file is named like "
"the master document.  No indices will be generated."
msgstr ""

#: ../../../usage/builders/index.rst:67
msgid ""
"This builder produces the same output as the standalone HTML builder, but "
"also generates HTML Help support files that allow the Microsoft HTML Help "
"Workshop to compile them into a CHM file."
msgstr ""

#: ../../../usage/builders/index.rst:80
msgid ""
"This builder produces the same output as the standalone HTML builder, but "
"also generates `Qt help`_ collection support files that allow the Qt "
"collection generator to compile them."
msgstr ""

#: ../../../usage/builders/index.rst:86
msgid "Moved to sphinxcontrib.qthelp from sphinx.builders package."
msgstr ""

#: ../../../usage/builders/index.rst:99
msgid ""
"This builder produces an Apple Help Book based on the same output as the "
"standalone HTML builder."
msgstr ""

#: ../../../usage/builders/index.rst:102
msgid ""
"If the source directory contains any ``.lproj`` folders, the one "
"corresponding to the selected language will have its contents merged with "
"the generated output.  These folders will be ignored by all other "
"documentation types."
msgstr ""

#: ../../../usage/builders/index.rst:107
msgid ""
"In order to generate a valid help book, this builder requires the command "
"line tool :program:`hiutil`, which is only available on Mac OS X 10.6 and "
"above.  You can disable the indexing step by setting :confval:"
"`applehelp_disable_external_tools` to ``True``, in which case the output "
"will not be valid until :program:`hiutil` has been run on all of the ``."
"lproj`` folders within the bundle."
msgstr ""

#: ../../../usage/builders/index.rst:124
msgid "Moved to sphinxcontrib.applehelp from sphinx.builders package."
msgstr ""

#: ../../../usage/builders/index.rst:129
msgid ""
"This builder produces the same output as the standalone HTML builder, but "
"also generates `GNOME Devhelp <https://wiki.gnome.org/Apps/Devhelp>`__ "
"support file that allows the GNOME Devhelp reader to view them."
msgstr ""

#: ../../../usage/builders/index.rst:141
msgid "Moved to sphinxcontrib.devhelp from sphinx.builders package."
msgstr ""

#: ../../../usage/builders/index.rst:146
msgid ""
"This builder produces the same output as the standalone HTML builder, but "
"also generates an *epub* file for ebook readers.  See :ref:`epub-faq` for "
"details about it.  For definition of the epub format, have a look at "
"`<http://idpf.org/epub>`_ or `<https://en.wikipedia.org/wiki/EPUB>`_. The "
"builder creates *EPUB 3* files."
msgstr ""

#: ../../../usage/builders/index.rst:162
msgid ""
"Since Sphinx-1.5, the epub3 builder is used for the default builder of epub."
msgstr ""

#: ../../../usage/builders/index.rst:168
msgid ""
"This builder produces a bunch of LaTeX files in the output directory.  You "
"have to specify which documents are to be included in which LaTeX files via "
"the :confval:`latex_documents` configuration value.  There are a few "
"configuration values that customize the output of this builder, see the "
"chapter :ref:`latex-options` for details."
msgstr ""

#: ../../../usage/builders/index.rst:174
msgid ""
"The produced LaTeX file uses several LaTeX packages that may not be present "
"in a \"minimal\" TeX distribution installation."
msgstr ""

#: ../../../usage/builders/index.rst:177
msgid ""
"On Ubuntu xenial, the following packages need to be installed for successful "
"PDF builds:"
msgstr ""

#: ../../../usage/builders/index.rst:180
msgid "``texlive-latex-recommended``"
msgstr ""

#: ../../../usage/builders/index.rst:181
msgid "``texlive-fonts-recommended``"
msgstr ""

#: ../../../usage/builders/index.rst:182
msgid "``texlive-latex-extra``"
msgstr ""

#: ../../../usage/builders/index.rst:183
msgid ""
"``latexmk`` (this is a Sphinx requirement on GNU/Linux and MacOS X for "
"functioning of ``make latexpdf``)"
msgstr ""

#: ../../../usage/builders/index.rst:186
msgid ""
"Additional packages are needed in some circumstances (see the discussion of "
"the ``'fontpkg'`` key of :confval:`latex_elements` for more information):"
msgstr ""

#: ../../../usage/builders/index.rst:189
msgid ""
"to support occasional Cyrillic letters or words, and a fortiori if :confval:"
"`language` is set to a Cyrillic language, the package ``texlive-lang-"
"cyrillic`` is required, and, with unmodified ``'fontpkg'``, also ``cm-"
"super`` or ``cm-super-minimal``,"
msgstr ""

#: ../../../usage/builders/index.rst:193
msgid ""
"to support occasional Greek letters or words (in text, not in :rst:dir:"
"`math` directive contents), ``texlive-lang-greek`` is required, and, with "
"unmodified ``'fontpkg'``, also ``cm-super`` or ``cm-super-minimal``,"
msgstr ""

#: ../../../usage/builders/index.rst:197
msgid ""
"for ``'xelatex'`` or ``'lualatex'`` (see :confval:`latex_engine`), ``texlive-"
"xetex`` resp. ``texlive-luatex``, and, if leaving unchanged ``'fontpkg'``, "
"``fonts-freefont-otf``."
msgstr ""

#: ../../../usage/builders/index.rst:201
msgid ""
"The testing of Sphinx LaTeX is done on Ubuntu xenial whose TeX distribution "
"is based on a TeXLive 2015 snapshot dated March 2016."
msgstr ""

#: ../../../usage/builders/index.rst:204
msgid "Formerly, testing had been done on Ubuntu precise (TeXLive 2009)."
msgstr ""

#: ../../../usage/builders/index.rst:207
msgid "Formerly, testing had been done on Ubuntu trusty (TeXLive 2013)."
msgstr ""

#: ../../../usage/builders/index.rst:212
msgid ""
"Since 1.6, ``make latexpdf`` uses ``latexmk`` (not on Windows).  This makes "
"sure the needed number of runs is automatically executed to get the cross-"
"references, bookmarks, indices, and tables of contents right."
msgstr ""

#: ../../../usage/builders/index.rst:216
msgid ""
"One can pass to ``latexmk`` options via the ``LATEXMKOPTS`` Makefile "
"variable. For example:"
msgstr ""

#: ../../../usage/builders/index.rst:219
msgid "make latexpdf LATEXMKOPTS=\"-silent\""
msgstr ""

#: ../../../usage/builders/index.rst:223
msgid "reduces console output to a minimum."
msgstr ""

#: ../../../usage/builders/index.rst:225
msgid ""
"Also, if ``latexmk`` is at version 4.52b or higher (January 2017) "
"``LATEXMKOPTS=\"-xelatex\"`` speeds up PDF builds via XeLateX in case of "
"numerous graphics inclusions."
msgstr ""

#: ../../../usage/builders/index.rst:229
msgid ""
"To pass options directly to the ``(pdf|xe|lua)latex`` binary, use variable "
"``LATEXOPTS``, for example:"
msgstr ""

#: ../../../usage/builders/index.rst:232
msgid "make latexpdf LATEXOPTS=\"--halt-on-error\""
msgstr ""

#: ../../../usage/builders/index.rst:242
msgid ""
"Note that a direct PDF builder is being provided by `rinohtype`_. The "
"builder's name is ``rinoh``. Refer to the `rinohtype manual`_ for details."
msgstr ""

#: ../../../usage/builders/index.rst:251
msgid ""
"This builder produces a text file for each reST file -- this is almost the "
"same as the reST source, but with much of the markup stripped for better "
"readability."
msgstr ""

#: ../../../usage/builders/index.rst:266
msgid ""
"This builder produces manual pages in the groff format.  You have to specify "
"which documents are to be included in which manual pages via the :confval:"
"`man_pages` configuration value."
msgstr ""

#: ../../../usage/builders/index.rst:282
msgid ""
"This builder produces Texinfo files that can be processed into Info files by "
"the :program:`makeinfo` program.  You have to specify which documents are to "
"be included in which Texinfo files via the :confval:`texinfo_documents` "
"configuration value."
msgstr ""

#: ../../../usage/builders/index.rst:287
msgid ""
"The Info format is the basis of the on-line help system used by GNU Emacs "
"and the terminal-based program :program:`info`.  See :ref:`texinfo-faq` for "
"more details.  The Texinfo format is the official documentation system used "
"by the GNU project.  More information on Texinfo can be found at `<https://"
"www.gnu.org/software/texinfo/>`_."
msgstr ""

#: ../../../usage/builders/index.rst:305
msgid ""
"This builder uses a module that implements the Python serialization API "
"(`pickle`, `simplejson`, `phpserialize`, and others) to dump the generated "
"HTML documentation.  The pickle builder is a subclass of it."
msgstr ""

#: ../../../usage/builders/index.rst:309
msgid ""
"A concrete subclass of this builder serializing to the `PHP serialization`_ "
"format could look like this::"
msgstr ""

#: ../../../usage/builders/index.rst:312
msgid ""
"import phpserialize\n"
"\n"
"class PHPSerializedBuilder(SerializingHTMLBuilder):\n"
"    name = 'phpserialized'\n"
"    implementation = phpserialize\n"
"    out_suffix = '.file.phpdump'\n"
"    globalcontext_filename = 'globalcontext.phpdump'\n"
"    searchindex_filename = 'searchindex.phpdump'"
msgstr ""

#: ../../../usage/builders/index.rst:325
msgid ""
"A module that implements `dump()`, `load()`, `dumps()` and `loads()` "
"functions that conform to the functions with the same names from the pickle "
"module.  Known modules implementing this interface are `simplejson`, "
"`phpserialize`, `plistlib`, and others."
msgstr ""

#: ../../../usage/builders/index.rst:332
msgid "The suffix for all regular files."
msgstr ""

#: ../../../usage/builders/index.rst:336
msgid ""
"The filename for the file that contains the \"global context\".  This is a "
"dict with some general configuration values such as the name of the project."
msgstr ""

#: ../../../usage/builders/index.rst:342
msgid "The filename for the search index Sphinx generates."
msgstr ""

#: ../../../usage/builders/index.rst:344 ../../../usage/builders/index.rst:354
#: ../../../usage/builders/index.rst:373
msgid "See :ref:`serialization-details` for details about the output format."
msgstr ""

#: ../../../usage/builders/index.rst:350
msgid ""
"This builder produces a directory with pickle files containing mostly HTML "
"fragments and TOC information, for use of a web application (or custom "
"postprocessing tool) that doesn't use the standard HTML templates."
msgstr ""

#: ../../../usage/builders/index.rst:358
msgid "The old name ``web`` still works as well."
msgstr ""

#: ../../../usage/builders/index.rst:364
msgid ""
"The file suffix is ``.fpickle``.  The global context is called "
"``globalcontext.pickle``, the search index ``searchindex.pickle``."
msgstr ""

#: ../../../usage/builders/index.rst:369
msgid ""
"This builder produces a directory with JSON files containing mostly HTML "
"fragments and TOC information, for use of a web application (or custom "
"postprocessing tool) that doesn't use the standard HTML templates."
msgstr ""

#: ../../../usage/builders/index.rst:381
msgid ""
"The file suffix is ``.fjson``.  The global context is called ``globalcontext."
"json``, the search index ``searchindex.json``."
msgstr ""

#: ../../../usage/builders/index.rst:389
msgid ""
"This builder produces gettext-style message catalogs.  Each top-level file "
"or subdirectory grows a single ``.pot`` catalog template."
msgstr ""

#: ../../../usage/builders/index.rst:392
msgid "See the documentation on :ref:`intl` for further reference."
msgstr ""

#: ../../../usage/builders/index.rst:405
msgid ""
"This builder produces an HTML overview of all :rst:dir:`versionadded`, :rst:"
"dir:`versionchanged` and :rst:dir:`deprecated` directives for the current :"
"confval:`version`.  This is useful to generate a ChangeLog file, for example."
msgstr ""

#: ../../../usage/builders/index.rst:419
msgid ""
"This builder produces no output.  The input is only parsed and checked for "
"consistency.  This is useful for linting purposes."
msgstr ""

#: ../../../usage/builders/index.rst:431
msgid ""
"This builder scans all documents for external links, tries to open them with "
"``requests``, and writes an overview which ones are broken and redirected to "
"standard output and to :file:`output.txt` in the output directory."
msgstr ""

#: ../../../usage/builders/index.rst:443
msgid "Since Sphinx-1.5, the linkcheck builder comes to use requests module."
msgstr ""

#: ../../../usage/builders/index.rst:447
msgid "The linkcheck builder retries links when servers apply rate limits."
msgstr ""

#: ../../../usage/builders/index.rst:452
msgid ""
"This builder produces Docutils-native XML files.  The output can be "
"transformed with standard XML tools such as XSLT processors into arbitrary "
"final forms."
msgstr ""

#: ../../../usage/builders/index.rst:466
msgid ""
"This builder is used for debugging the Sphinx/Docutils \"Reader to Transform "
"to Writer\" pipeline. It produces compact pretty-printed \"pseudo-XML\", "
"files where nesting is indicated by indentation (no end-tags). External "
"attributes for all elements are output, and internal attributes for any "
"leftover \"pending\" elements are also given."
msgstr ""

#: ../../../usage/builders/index.rst:481
msgid "Built-in Sphinx extensions that offer more builders are:"
msgstr ""

#: ../../../usage/builders/index.rst:483
msgid ":mod:`~sphinx.ext.doctest`"
msgstr ""

#: ../../../usage/builders/index.rst:484
msgid ":mod:`~sphinx.ext.coverage`"
msgstr ""

#: ../../../usage/builders/index.rst:490
msgid "Serialization builder details"
msgstr ""

#: ../../../usage/builders/index.rst:492
msgid ""
"All serialization builders outputs one file per source file and a few "
"special files.  They also copy the reST source files in the directory "
"``_sources`` under the output directory."
msgstr ""

#: ../../../usage/builders/index.rst:496
msgid ""
"The :class:`.PickleHTMLBuilder` is a builtin subclass that implements the "
"pickle serialization interface."
msgstr ""

#: ../../../usage/builders/index.rst:499
msgid ""
"The files per source file have the extensions of :attr:`~."
"SerializingHTMLBuilder.out_suffix`, and are arranged in directories just as "
"the source files are.  They unserialize to a dictionary (or dictionary like "
"structure) with these keys:"
msgstr ""

#: ../../../usage/builders/index.rst:506
msgid "``body``"
msgstr ""

#: ../../../usage/builders/index.rst:505
msgid ""
"The HTML \"body\" (that is, the HTML rendering of the source file), as "
"rendered by the HTML translator."
msgstr ""

#: ../../../usage/builders/index.rst:509
msgid "``title``"
msgstr ""

#: ../../../usage/builders/index.rst:509
msgid "The title of the document, as HTML (may contain markup)."
msgstr ""

#: ../../../usage/builders/index.rst:512
msgid "``toc``"
msgstr ""

#: ../../../usage/builders/index.rst:512
msgid "The table of contents for the file, rendered as an HTML ``<ul>``."
msgstr ""

#: ../../../usage/builders/index.rst:515
msgid "``display_toc``"
msgstr ""

#: ../../../usage/builders/index.rst:515
msgid "A boolean that is ``True`` if the ``toc`` contains more than one entry."
msgstr ""

#: ../../../usage/builders/index.rst:518
msgid "``current_page_name``"
msgstr ""

#: ../../../usage/builders/index.rst:518
msgid "The document name of the current file."
msgstr ""

#: ../../../usage/builders/index.rst:524
msgid "``parents``, ``prev`` and ``next``"
msgstr ""

#: ../../../usage/builders/index.rst:521
msgid ""
"Information about related chapters in the TOC tree.  Each relation is a "
"dictionary with the keys ``link`` (HREF for the relation) and ``title`` "
"(title of the related document, as HTML).  ``parents`` is a list of "
"relations, while ``prev`` and ``next`` are a single relation."
msgstr ""

#: ../../../usage/builders/index.rst:527
msgid "``sourcename``"
msgstr ""

#: ../../../usage/builders/index.rst:527
msgid "The name of the source file under ``_sources``."
msgstr ""

#: ../../../usage/builders/index.rst:529
msgid "The special files are located in the root output directory.  They are:"
msgstr ""

#: ../../../usage/builders/index.rst:548
msgid ":attr:`.SerializingHTMLBuilder.globalcontext_filename`"
msgstr ""

#: ../../../usage/builders/index.rst:532
msgid "A pickled dict with these keys:"
msgstr ""

#: ../../../usage/builders/index.rst:535
msgid "``project``, ``copyright``, ``release``, ``version``"
msgstr ""

#: ../../../usage/builders/index.rst:535
msgid "The same values as given in the configuration file."
msgstr ""

#: ../../../usage/builders/index.rst:538
msgid "``style``"
msgstr ""

#: ../../../usage/builders/index.rst:538
msgid ":confval:`html_style`."
msgstr ""

#: ../../../usage/builders/index.rst:541
msgid "``last_updated``"
msgstr ""

#: ../../../usage/builders/index.rst:541
msgid "Date of last build."
msgstr ""

#: ../../../usage/builders/index.rst:545
msgid "``builder``"
msgstr ""

#: ../../../usage/builders/index.rst:544
msgid ""
"Name of the used builder, in the case of pickles this is always ``'pickle'``."
msgstr ""

#: ../../../usage/builders/index.rst:548
msgid "``titles``"
msgstr ""

#: ../../../usage/builders/index.rst:548
msgid "A dictionary of all documents' titles, as HTML strings."
msgstr ""

#: ../../../usage/builders/index.rst:558
msgid ":attr:`.SerializingHTMLBuilder.searchindex_filename`"
msgstr ""

#: ../../../usage/builders/index.rst:551
msgid ""
"An index that can be used for searching the documentation.  It is a pickled "
"list with these entries:"
msgstr ""

#: ../../../usage/builders/index.rst:554
msgid "A list of indexed docnames."
msgstr ""

#: ../../../usage/builders/index.rst:555
msgid ""
"A list of document titles, as HTML strings, in the same order as the first "
"list."
msgstr ""

#: ../../../usage/builders/index.rst:557
msgid ""
"A dict mapping word roots (processed by an English-language stemmer) to a "
"list of integers, which are indices into the first list."
msgstr ""

#: ../../../usage/builders/index.rst:567
msgid "``environment.pickle``"
msgstr ""

#: ../../../usage/builders/index.rst:561
msgid ""
"The build environment.  This is always a pickle file, independent of the "
"builder and a copy of the environment that was used when the builder was "
"started."
msgstr ""

#: ../../../usage/builders/index.rst:565
msgid "Todo"
msgstr ""

#: ../../../usage/builders/index.rst:565
msgid "Document common members."
msgstr ""

#: ../../../usage/builders/index.rst:567
msgid ""
"Unlike the other pickle files this pickle file requires that the ``sphinx`` "
"package is available on unpickling."
msgstr ""
