# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-03 20:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../usage/restructuredtext/basics.rst:7
msgid "reStructuredText Primer"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:9
msgid ""
"reStructuredText is the default plaintext markup language used by Sphinx.  "
"This section is a brief introduction to reStructuredText (reST) concepts and "
"syntax, intended to provide authors with enough information to author "
"documents productively.  Since reST was designed to be a simple, unobtrusive "
"markup language, this will not take too long."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:17
msgid ""
"The authoritative `reStructuredText User Documentation <https://docutils."
"sourceforge.io/rst.html>`_.  The \"ref\" links in this document link to the "
"description of the individual constructs in the reST reference."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:24
msgid "Paragraphs"
msgstr "段落"

#: ../../../usage/restructuredtext/basics.rst:26
msgid ""
"The paragraph (:duref:`ref <paragraphs>`) is the most basic block in a reST "
"document.  Paragraphs are simply chunks of text separated by one or more "
"blank lines.  As in Python, indentation is significant in reST, so all lines "
"of the same paragraph must be left-aligned to the same level of indentation."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:35
msgid "Inline markup"
msgstr "內聯標註"

#: ../../../usage/restructuredtext/basics.rst:37
msgid "The standard reST inline markup is quite simple: use"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:39
msgid "one asterisk: ``*text*`` for emphasis (italics),"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:40
msgid "two asterisks: ``**text**`` for strong emphasis (boldface), and"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:41
msgid "backquotes: ````text```` for code samples."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:43
msgid ""
"If asterisks or backquotes appear in running text and could be confused with "
"inline markup delimiters, they have to be escaped with a backslash."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:46
msgid "Be aware of some restrictions of this markup:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:48
msgid "it may not be nested,"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:49
msgid "content may not start or end with whitespace: ``* text*`` is wrong,"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:50
msgid ""
"it must be separated from surrounding text by non-word characters.  Use a "
"backslash escaped space to work around that: ``thisis\\ *one*\\ word``."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:53
msgid "These restrictions may be lifted in future versions of the docutils."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:55
msgid ""
"It is also possible to replace or expand upon some of this inline markup "
"with roles. Refer to :ref:`rst-roles-alt` for more information."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:60
msgid "Lists and Quote-like blocks"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:62
msgid ""
"List markup (:duref:`ref <bullet-lists>`) is natural: just place an asterisk "
"at the start of a paragraph and indent properly.  The same goes for numbered "
"lists; they can also be autonumbered using a ``#`` sign::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:66
msgid ""
"* This is a bulleted list.\n"
"* It has two items, the second\n"
"  item uses two lines.\n"
"\n"
"1. This is a numbered list.\n"
"2. It has two items too.\n"
"\n"
"#. This is a numbered list.\n"
"#. It has two items too."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:76
msgid ""
"Nested lists are possible, but be aware that they must be separated from the "
"parent list items by blank lines::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:79
msgid ""
"* this is\n"
"* a list\n"
"\n"
"  * with a nested list\n"
"  * and some subitems\n"
"\n"
"* and here the parent list continues"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:87
msgid ""
"Definition lists (:duref:`ref <definition-lists>`) are created as follows::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:89
msgid ""
"term (up to a line of text)\n"
"   Definition of the term, which must be indented\n"
"\n"
"   and can even consist of multiple paragraphs\n"
"\n"
"next term\n"
"   Description."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:97
msgid "Note that the term cannot have more than one line of text."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:99
msgid ""
"Quoted paragraphs (:duref:`ref <block-quotes>`) are created by just "
"indenting them more than the surrounding paragraphs."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:102
msgid ""
"Line blocks (:duref:`ref <line-blocks>`) are a way of preserving line "
"breaks::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:104
msgid ""
"| These lines are\n"
"| broken exactly like in\n"
"| the source file."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:108
msgid "There are also several more special blocks available:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:110
msgid ""
"field lists (:duref:`ref <field-lists>`, with caveats noted in :ref:`rst-"
"field-lists`)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:112
msgid "option lists (:duref:`ref <option-lists>`)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:113
msgid "quoted literal blocks (:duref:`ref <quoted-literal-blocks>`)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:114
msgid "doctest blocks (:duref:`ref <doctest-blocks>`)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:120
msgid "Literal blocks"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:122
msgid ""
"Literal code blocks (:duref:`ref <literal-blocks>`) are introduced by ending "
"a paragraph with the special marker ``::``.  The literal block must be "
"indented (and, like all paragraphs, separated from the surrounding ones by "
"blank lines)::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:127
msgid ""
"This is a normal text paragraph. The next paragraph is a code sample::\n"
"\n"
"   It is not processed in any way, except\n"
"   that the indentation is removed.\n"
"\n"
"   It can span multiple lines.\n"
"\n"
"This is a normal text paragraph again."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:136
msgid "The handling of the ``::`` marker is smart:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:138
msgid ""
"If it occurs as a paragraph of its own, that paragraph is completely left "
"out of the document."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:140
msgid "If it is preceded by whitespace, the marker is removed."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:141
msgid ""
"If it is preceded by non-whitespace, the marker is replaced by a single "
"colon."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:144
msgid ""
"That way, the second sentence in the above example's first paragraph would "
"be rendered as \"The next paragraph is a code sample:\"."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:147
msgid ""
"Code highlighting can be enabled for these literal blocks on a document-wide "
"basis using the :rst:dir:`highlight` directive and on a project-wide basis "
"using the :confval:`highlight_language` configuration option. The :rst:dir:"
"`code-block` directive can be used to set highlighting on a block-by-block "
"basis. These directives are discussed later."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:157
msgid "Doctest blocks"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:159
msgid ""
"Doctest blocks (:duref:`ref <doctest-blocks>`) are interactive Python "
"sessions cut-and-pasted into docstrings. They do not require the :ref:"
"`literal blocks <rst-literal-blocks>` syntax. The doctest block must end "
"with a blank line and should *not* end with an unused prompt::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:164
msgid ""
">>> 1 + 1\n"
"2"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:170
msgid "Tables"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:172
msgid ""
"For *grid tables* (:duref:`ref <grid-tables>`), you have to \"paint\" the "
"cell grid yourself.  They look like this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:175
msgid ""
"+------------------------+------------+----------+----------+\n"
"| Header row, column 1   | Header 2   | Header 3 | Header 4 |\n"
"| (header rows optional) |            |          |          |\n"
"+========================+============+==========+==========+\n"
"| body row 1, column 1   | column 2   | column 3 | column 4 |\n"
"+------------------------+------------+----------+----------+\n"
"| body row 2             | ...        | ...      |          |\n"
"+------------------------+------------+----------+----------+"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:184
msgid ""
"*Simple tables* (:duref:`ref <simple-tables>`) are easier to write, but "
"limited: they must contain more than one row, and the first column cells "
"cannot contain multiple lines.  They look like this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:188
msgid ""
"=====  =====  =======\n"
"A      B      A and B\n"
"=====  =====  =======\n"
"False  False  False\n"
"True   False  False\n"
"False  True   False\n"
"True   True   True\n"
"=====  =====  ======="
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:197
msgid ""
"Two more syntaxes are supported: *CSV tables* and *List tables*. They use an "
"*explicit markup block*. Refer to :ref:`table-directives` for more "
"information."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:202
msgid "Hyperlinks"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:205
msgid "External links"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:207
msgid ""
"Use ```Link text <https://domain.invalid/>`_`` for inline web links.  If the "
"link text should be the web address, you don't need special markup at all, "
"the parser finds links and mail addresses in ordinary text."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:211
msgid ""
"There must be a space between the link text and the opening \\< for the URL."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:213
msgid ""
"You can also separate the link and the target definition (:duref:`ref "
"<hyperlink-targets>`), like this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:216
msgid ""
"This is a paragraph that contains `a link`_.\n"
"\n"
".. _a link: https://domain.invalid/"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:221
msgid "Internal links"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:223
msgid ""
"Internal linking is done via a special reST role provided by Sphinx, see the "
"section on specific markup, :ref:`ref-role`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:230
msgid "Sections"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:232
msgid ""
"Section headers (:duref:`ref <sections>`) are created by underlining (and "
"optionally overlining) the section title with a punctuation character, at "
"least as long as the text::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:236
msgid ""
"=================\n"
"This is a heading\n"
"================="
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:240
msgid ""
"Normally, there are no heading levels assigned to certain characters as the "
"structure is determined from the succession of headings.  However, this "
"convention is used in `Python's Style Guide for documenting <https://docs."
"python.org/devguide/documenting.html#style-guide>`_ which you may follow:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:246
msgid "``#`` with overline, for parts"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:247
msgid "``*`` with overline, for chapters"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:248
msgid "``=`` for sections"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:249
msgid "``-`` for subsections"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:250
msgid "``^`` for subsubsections"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:251
msgid "``\"`` for paragraphs"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:253
msgid ""
"Of course, you are free to use your own marker characters (see the reST "
"documentation), and use a deeper nesting level, but keep in mind that most "
"target formats (HTML, LaTeX) have a limited supported nesting depth."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:261
msgid "Field Lists"
msgstr "欄位列表"

#: ../../../usage/restructuredtext/basics.rst:263
msgid ""
"Field lists (:duref:`ref <field-lists>`) are sequences of fields marked up "
"like this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:266
msgid ":fieldname: Field content"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:268
msgid "They are commonly used in Python documentation::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:270
msgid ""
"def my_function(my_arg, my_other_arg):\n"
"    \"\"\"A function just for me.\n"
"\n"
"    :param my_arg: The first of my arguments.\n"
"    :param my_other_arg: The second of my arguments.\n"
"\n"
"    :returns: A message (just for me, of course).\n"
"    \"\"\""
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:279
msgid ""
"Sphinx extends standard docutils behavior and intercepts field lists "
"specified at the beginning of documents.  Refer to :doc:`field-lists` for "
"more information."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:290
msgid "Roles"
msgstr "角色"

#: ../../../usage/restructuredtext/basics.rst:292
msgid ""
"A role or \"custom interpreted text role\" (:duref:`ref <roles>`) is an "
"inline piece of explicit markup. It signifies that the enclosed text should "
"be interpreted in a specific way.  Sphinx uses this to provide semantic "
"markup and cross-referencing of identifiers, as described in the appropriate "
"section.  The general syntax is ``:rolename:`content```."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:298
msgid "Docutils supports the following roles:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:300
msgid ":durole:`emphasis` -- equivalent of ``*emphasis*``"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:301
msgid ":durole:`strong` -- equivalent of ``**strong**``"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:302
msgid ":durole:`literal` -- equivalent of ````literal````"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:303
msgid ":durole:`subscript` -- subscript text"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:304
msgid ":durole:`superscript` -- superscript text"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:305
msgid ""
":durole:`title-reference` -- for titles of books, periodicals, and other "
"materials"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:308
msgid "Refer to :doc:`roles` for roles added by Sphinx."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:312
msgid "Explicit Markup"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:314
msgid ""
"\"Explicit markup\" (:duref:`ref <explicit-markup-blocks>`) is used in reST "
"for most constructs that need special handling, such as footnotes, specially-"
"highlighted paragraphs, comments, and generic directives."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:318
msgid ""
"An explicit markup block begins with a line starting with ``..`` followed by "
"whitespace and is terminated by the next paragraph at the same level of "
"indentation.  (There needs to be a blank line between explicit markup and "
"normal paragraphs.  This may all sound a bit complicated, but it is "
"intuitive enough when you write it.)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:328
msgid "Directives"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:330
msgid ""
"A directive (:duref:`ref <directives>`) is a generic block of explicit "
"markup. Along with roles, it is one of the extension mechanisms of reST, and "
"Sphinx makes heavy use of it."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:334
msgid "Docutils supports the following directives:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:336
msgid ""
"Admonitions: :dudir:`attention`, :dudir:`caution`, :dudir:`danger`, :dudir:"
"`error`, :dudir:`hint`, :dudir:`important`, :dudir:`note`, :dudir:`tip`, :"
"dudir:`warning` and the generic :dudir:`admonition <admonitions>`.  (Most "
"themes style only \"note\" and \"warning\" specially.)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:342
msgid "Images:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:344
msgid ":dudir:`image` (see also Images_ below)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:345
msgid ":dudir:`figure` (an image with caption and optional legend)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:347
msgid "Additional body elements:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:349
msgid ""
":dudir:`contents <table-of-contents>` (a local, i.e. for the current file "
"only, table of contents)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:351
msgid ""
":dudir:`container` (a container with a custom class, useful to generate an "
"outer ``<div>`` in HTML)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:353
msgid ":dudir:`rubric` (a heading without relation to the document sectioning)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:354
msgid ":dudir:`topic`, :dudir:`sidebar` (special highlighted body elements)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:355
msgid ":dudir:`parsed-literal` (literal block that supports inline markup)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:356
msgid ":dudir:`epigraph` (a block quote with optional attribution line)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:357
msgid ""
":dudir:`highlights`, :dudir:`pull-quote` (block quotes with their own class "
"attribute)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:359
msgid ":dudir:`compound <compound-paragraph>` (a compound paragraph)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:361
msgid "Special tables:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:363
msgid ":dudir:`table` (a table with title)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:364
msgid ":dudir:`csv-table` (a table generated from comma-separated values)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:365
msgid ":dudir:`list-table` (a table generated from a list of lists)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:367
msgid "Special directives:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:369
msgid ":dudir:`raw <raw-data-pass-through>` (include raw target-format markup)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:370
msgid ""
":dudir:`include` (include reStructuredText from another file) -- in Sphinx, "
"when given an absolute include file path, this directive takes it as "
"relative to the source directory"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:376
msgid ":dudir:`class` (assign a class attribute to the next element)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:380
msgid ""
"When the default domain contains a ``class`` directive, this directive will "
"be shadowed.  Therefore, Sphinx re-exports it as ``rst-class``."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:383
msgid "HTML specifics:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:385
msgid ""
":dudir:`meta` (generation of HTML ``<meta>`` tags, see also :ref:`html-meta` "
"below)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:387
msgid ":dudir:`title <metadata-document-title>` (override document title)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:389
msgid "Influencing markup:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:391
msgid ":dudir:`default-role` (set a new default role)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:392
msgid ":dudir:`role` (create a new role)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:394
msgid ""
"Since these are only per-file, better use Sphinx's facilities for setting "
"the :confval:`default_role`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:399
msgid ""
"Do *not* use the directives :dudir:`sectnum`, :dudir:`header` and :dudir:"
"`footer`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:402
msgid "Directives added by Sphinx are described in :doc:`directives`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:404
msgid ""
"Basically, a directive consists of a name, arguments, options and content. "
"(Keep this terminology in mind, it is used in the next chapter describing "
"custom directives.)  Looking at this example, ::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:408
msgid ""
".. function:: foo(x)\n"
"              foo(y, z)\n"
"   :module: some.module.name\n"
"\n"
"   Return a line of text input from the user."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:414
msgid ""
"``function`` is the directive name.  It is given two arguments here, the "
"remainder of the first line and the second line, as well as one option "
"``module`` (as you can see, options are given in the lines immediately "
"following the arguments and indicated by the colons).  Options must be "
"indented to the same level as the directive content."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:420
msgid ""
"The directive content follows after a blank line and is indented relative to "
"the directive start or if options are present, by the same amount as the "
"options."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:424
msgid ""
"Be careful as the indent is not a fixed number of whitespace, e.g. three, "
"but any number whitespace.  This can be surprising when a fixed indent is "
"used throughout the document and can make a difference for directives which "
"are sensitive to whitespace. Compare::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:429
msgid ""
".. code-block::\n"
"   :caption: A cool example\n"
"\n"
"       The output of this line starts with four spaces.\n"
"\n"
".. code-block::\n"
"\n"
"       The output of this line has no spaces at the beginning."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:438
msgid ""
"In the first code block, the indent for the content was fixated by the "
"option line to three spaces, consequently the content starts with four "
"spaces. In the latter the indent was fixed by the content itself to seven "
"spaces, thus it does not start with a space."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:445
msgid "Images"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:447
msgid "reST supports an image directive (:dudir:`ref <image>`), used like so::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:449
msgid ""
".. image:: gnu.png\n"
"   (options)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:452
msgid ""
"When used within Sphinx, the file name given (here ``gnu.png``) must either "
"be relative to the source file, or absolute which means that they are "
"relative to the top source directory.  For example, the file ``sketch/spam."
"rst`` could refer to the image ``images/spam.png`` as ``../images/spam.png`` "
"or ``/images/spam.png``."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:458
msgid ""
"Sphinx will automatically copy image files over to a subdirectory of the "
"output directory on building (e.g. the ``_static`` directory for HTML "
"output.)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:461
msgid ""
"Interpretation of image size options (``width`` and ``height``) is as "
"follows: if the size has no unit or the unit is pixels, the given size will "
"only be respected for output channels that support pixels. Other units (like "
"``pt`` for points) will be used for HTML and LaTeX output (the latter "
"replaces ``pt`` by ``bp`` as this is the TeX unit such that ``72bp=1in``)."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:467
msgid ""
"Sphinx extends the standard docutils behavior by allowing an asterisk for "
"the extension::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:470
msgid ".. image:: gnu.*"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:472
msgid ""
"Sphinx then searches for all images matching the provided pattern and "
"determines their type.  Each builder then chooses the best image out of "
"these candidates.  For instance, if the file name ``gnu.*`` was given and "
"two files :file:`gnu.pdf` and :file:`gnu.png` existed in the source tree, "
"the LaTeX builder would choose the former, while the HTML builder would "
"prefer the latter.  Supported image types and choosing priority are defined "
"at :doc:`/usage/builders/index`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:480
msgid "Note that image file names should not contain spaces."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:482
msgid "Added the support for file names ending in an asterisk."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:485
msgid "Image paths can now be absolute."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:488
msgid "latex target supports pixels (default is ``96px=1in``)."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:493
msgid "Footnotes"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:495
msgid ""
"For footnotes (:duref:`ref <footnotes>`), use ``[#name]_`` to mark the "
"footnote location, and add the footnote body at the bottom of the document "
"after a \"Footnotes\" rubric heading, like so::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:499
msgid ""
"Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_\n"
"\n"
".. rubric:: Footnotes\n"
"\n"
".. [#f1] Text of the first footnote.\n"
".. [#f2] Text of the second footnote."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:506
msgid ""
"You can also explicitly number the footnotes (``[1]_``) or use auto-numbered "
"footnotes without names (``[#]_``)."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:511
msgid "Citations"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:513
msgid ""
"Standard reST citations (:duref:`ref <citations>`) are supported, with the "
"additional feature that they are \"global\", i.e. all citations can be "
"referenced from all files.  Use them like so::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:517
msgid ""
"Lorem ipsum [Ref]_ dolor sit amet.\n"
"\n"
".. [Ref] Book or article reference, URL or whatever."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:521
msgid ""
"Citation usage is similar to footnote usage, but with a label that is not "
"numeric or begins with ``#``."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:526
msgid "Substitutions"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:528
msgid ""
"reST supports \"substitutions\" (:duref:`ref <substitution-definitions>`), "
"which are pieces of text and/or markup referred to in the text by ``|name|"
"``.  They are defined like footnotes with explicit markup blocks, like this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:532
msgid ".. |name| replace:: replacement *text*"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:534
msgid "or this::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:536
msgid ""
".. |caution| image:: warning.png\n"
"             :alt: Warning!"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:539
msgid ""
"See the :duref:`reST reference for substitutions <substitution-definitions>` "
"for details."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:544
msgid ""
"If you want to use some substitutions for all documents, put them into :"
"confval:`rst_prolog` or :confval:`rst_epilog` or put them into a separate "
"file and include it into all documents you want to use them in, using the :"
"rst:dir:`include` directive.  (Be sure to give the include file a file name "
"extension differing from that of other source files, to avoid Sphinx finding "
"it as a standalone document.)"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:551
msgid ""
"Sphinx defines some default substitutions, see :ref:`default-substitutions`."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:555
msgid "Comments"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:557
msgid ""
"Every explicit markup block which isn't a valid markup construct (like the "
"footnotes above) is regarded as a comment (:duref:`ref <comments>`).  For "
"example::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:561
msgid ".. This is a comment."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:563
msgid "You can indent text after a comment start to form multiline comments::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:565
msgid ""
"..\n"
"   This whole indented block\n"
"   is a comment.\n"
"\n"
"   Still in the comment."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:575
msgid "HTML Metadata"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:577
msgid ""
"The :rst:dir:`meta` directive (:dudir:`ref <meta>`) allows specifying the "
"HTML `metadata element`_ of a Sphinx documentation page.  For example, the "
"directive::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:581
msgid ""
".. meta::\n"
"   :description: The Sphinx documentation builder\n"
"   :keywords: Sphinx, documentation, builder"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:585
msgid "will generate the following HTML output:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:587
msgid ""
"<meta name=\"description\" content=\"The Sphinx documentation builder\">\n"
"<meta name=\"keywords\" content=\"Sphinx, documentation, builder\">"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:592
msgid ""
"Also, Sphinx will add the keywords as specified in the meta directive to the "
"search index.  Thereby, the ``lang`` attribute of the meta element is "
"considered.  For example, the directive::"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:596
msgid ""
".. meta::\n"
"   :keywords: backup\n"
"   :keywords lang=en: pleasefindthiskey pleasefindthiskeytoo\n"
"   :keywords lang=de: bittediesenkeyfinden"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:601
msgid ""
"adds the following words to the search indices of builds with different "
"language configurations:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:604
msgid "``pleasefindthiskey``, ``pleasefindthiskeytoo`` to *English* builds;"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:605
msgid "``bittediesenkeyfinden`` to *German* builds;"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:606
msgid "``backup`` to builds in all languages."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:612
msgid "Source encoding"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:614
msgid ""
"Since the easiest way to include special characters like em dashes or "
"copyright signs in reST is to directly write them as Unicode characters, one "
"has to specify an encoding.  Sphinx assumes source files to be encoded in "
"UTF-8 by default; you can change this with the :confval:`source_encoding` "
"config value."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:621
msgid "Gotchas"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:623
msgid ""
"There are some problems one commonly runs into while authoring reST "
"documents:"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:625
msgid ""
"**Separation of inline markup:** As said above, inline markup spans must be "
"separated from the surrounding text by non-word characters, you have to use "
"a backslash-escaped space to get around that.  See :duref:`the reference "
"<substitution-definitions>` for the details."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:630
msgid ""
"**No nested inline markup:** Something like ``*see :func:`foo`*`` is not "
"possible."
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:542
msgid "global"
msgstr ""

#: ../../../usage/restructuredtext/basics.rst:542
msgid "substitutions"
msgstr ""
