# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2025, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-03 20:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../development/templating.rst:7
msgid "Templating"
msgstr ""

#: ../../../development/templating.rst:9
msgid ""
"Sphinx uses the `Jinja <https://jinja.palletsprojects.com/>`_ templating "
"engine for its HTML templates.  Jinja is a text-based engine, inspired by "
"Django templates, so anyone having used Django will already be familiar with "
"it. It also has excellent documentation for those who need to make "
"themselves familiar with it."
msgstr ""

#: ../../../development/templating.rst:17
msgid "Do I need to use Sphinx's templates to produce HTML?"
msgstr ""

#: ../../../development/templating.rst:19
msgid "No.  You have several other options:"
msgstr ""

#: ../../../development/templating.rst:21
msgid ""
"You can write a :class:`~sphinx.application.TemplateBridge` subclass that "
"calls your template engine of choice, and set the :confval:`template_bridge` "
"configuration value accordingly."
msgstr ""

#: ../../../development/templating.rst:25
msgid ""
"You can :ref:`write a custom builder <writing-builders>` that derives from :"
"class:`~sphinx.builders.html.StandaloneHTMLBuilder` and calls your template "
"engine of choice."
msgstr ""

#: ../../../development/templating.rst:29
msgid ""
"You can use the :class:`~sphinxcontrib.serializinghtml.PickleHTMLBuilder` "
"that produces pickle files with the page contents, and postprocess them "
"using a custom tool, or use them in your Web application."
msgstr ""

#: ../../../development/templating.rst:35
msgid "Jinja/Sphinx Templating Primer"
msgstr ""

#: ../../../development/templating.rst:37
msgid ""
"The default templating language in Sphinx is Jinja.  It's Django/Smarty "
"inspired and easy to understand.  The most important concept in Jinja is :"
"dfn:`template inheritance`, which means that you can overwrite only specific "
"blocks within a template, customizing it while also keeping the changes at a "
"minimum."
msgstr ""

#: ../../../development/templating.rst:42
msgid ""
"To customize the output of your documentation you can override all the "
"templates (both the layout templates and the child templates) by adding "
"files with the same name as the original filename into the template "
"directory of the structure the Sphinx quickstart generated for you."
msgstr ""

#: ../../../development/templating.rst:47
msgid ""
"Sphinx will look for templates in the folders of :confval:`templates_path` "
"first, and if it can't find the template it's looking for there, it falls "
"back to the selected theme's templates."
msgstr ""

#: ../../../development/templating.rst:51
msgid ""
"A template contains **variables**, which are replaced with values when the "
"template is evaluated, **tags**, which control the logic of the template and "
"**blocks** which are used for template inheritance."
msgstr ""

#: ../../../development/templating.rst:55
msgid ""
"Sphinx's *basic* theme provides base templates with a couple of blocks it "
"will fill with data.  These are located in the :file:`themes/basic` "
"subdirectory of the Sphinx installation directory, and used by all builtin "
"Sphinx themes. Templates with the same name in the :confval:`templates_path` "
"override templates supplied by the selected theme."
msgstr ""

#: ../../../development/templating.rst:61
msgid ""
"For example, to add a new link to the template area containing related links "
"all you have to do is to add a new template called ``layout.html`` with the "
"following contents::"
msgstr ""

#: ../../../development/templating.rst:65
msgid ""
"{% extends \"!layout.html\" %}\n"
"{% block rootrellink %}\n"
"    <li><a href=\"https://project.invalid/\">Project Homepage</a> &raquo;</"
"li>\n"
"    {{ super() }}\n"
"{% endblock %}"
msgstr ""

#: ../../../development/templating.rst:71
msgid ""
"By prefixing the name of the overridden template with an exclamation mark, "
"Sphinx will load the layout template from the underlying HTML theme."
msgstr ""

#: ../../../development/templating.rst:75
msgid ""
"If you override a block, call ``{{ super() }}`` somewhere to render the "
"block's original content in the extended template -- unless you don't want "
"that content to show up."
msgstr ""

#: ../../../development/templating.rst:81
msgid "Working with the builtin templates"
msgstr ""

#: ../../../development/templating.rst:83
msgid ""
"The builtin **basic** theme supplies the templates that all builtin Sphinx "
"themes are based on.  It has the following elements you can override or use:"
msgstr ""

#: ../../../development/templating.rst:87
msgid "Blocks"
msgstr ""

#: ../../../development/templating.rst:89
msgid "The following blocks exist in the ``layout.html`` template:"
msgstr ""

#: ../../../development/templating.rst:95
msgid "``doctype``"
msgstr ""

#: ../../../development/templating.rst:92
msgid ""
"The doctype of the output format.  By default this is XHTML 1.0 Transitional "
"as this is the closest to what Sphinx and Docutils generate and it's a good "
"idea not to change it unless you want to switch to HTML 5 or a different but "
"compatible XHTML doctype."
msgstr ""

#: ../../../development/templating.rst:99
msgid "``linktags``"
msgstr ""

#: ../../../development/templating.rst:98
msgid ""
"This block adds a couple of ``<link>`` tags to the head section of the "
"template."
msgstr ""

#: ../../../development/templating.rst:104
msgid "``extrahead``"
msgstr ""

#: ../../../development/templating.rst:102
msgid ""
"This block is empty by default and can be used to add extra contents into "
"the ``<head>`` tag of the generated HTML file.  This is the right place to "
"add references to JavaScript or extra CSS files."
msgstr ""

#: ../../../development/templating.rst:113
msgid "``relbar1``, ``relbar2``"
msgstr ""

#: ../../../development/templating.rst:107
msgid ""
"This block contains the *relation bar*, the list of related links (the "
"parent documents on the left, and the links to index, modules etc. on the "
"right).  ``relbar1`` appears before the document, ``relbar2`` after the "
"document.  By default, both blocks are filled; to show the relbar only "
"before the document, you would override `relbar2` like this::"
msgstr ""

#: ../../../development/templating.rst:113
msgid "{% block relbar2 %}{% endblock %}"
msgstr ""

#: ../../../development/templating.rst:121
msgid "``rootrellink``, ``relbaritems``"
msgstr ""

#: ../../../development/templating.rst:116
msgid ""
"Inside the relbar there are three sections: The ``rootrellink``, the links "
"from the documentation and the custom ``relbaritems``.  The ``rootrellink`` "
"is a block that by default contains a list item pointing to the root "
"document by default, the ``relbaritems`` is an empty block.  If you override "
"them to add extra links into the bar make sure that they are list items and "
"end with the :data:`reldelim1`."
msgstr ""

#: ../../../development/templating.rst:134
msgid "``document``"
msgstr ""

#: ../../../development/templating.rst:124
msgid ""
"The contents of the document itself.  It contains the block \"body\" where "
"the individual content is put by subtemplates like ``page.html``."
msgstr ""

#: ../../../development/templating.rst:128
msgid ""
"In order for the built-in JavaScript search to show a page preview on the "
"results page, the document or body content should be wrapped in an HTML "
"element containing the ``role=\"main\"`` attribute. For example::"
msgstr ""

#: ../../../development/templating.rst:132
msgid ""
"<div role=\"main\">\n"
"  {% block document %}{% endblock %}\n"
"</div>"
msgstr ""

#: ../../../development/templating.rst:146
msgid "``sidebar1``, ``sidebar2``"
msgstr ""

#: ../../../development/templating.rst:137
msgid ""
"A possible location for a sidebar.  ``sidebar1`` appears before the document "
"and is empty by default, ``sidebar2`` after the document and contains the "
"default sidebar.  If you want to swap the sidebar location override this and "
"call the ``sidebar`` helper::"
msgstr ""

#: ../../../development/templating.rst:142
msgid ""
"{% block sidebar1 %}{{ sidebar() }}{% endblock %}\n"
"{% block sidebar2 %}{% endblock %}"
msgstr ""

#: ../../../development/templating.rst:145
msgid ""
"(The ``sidebar2`` location for the sidebar is needed by the ``sphinxdoc."
"css`` stylesheet, for example.)"
msgstr ""

#: ../../../development/templating.rst:150
msgid "``sidebarlogo``"
msgstr ""

#: ../../../development/templating.rst:149
msgid ""
"The logo location within the sidebar.  Override this if you want to place "
"some content at the top of the sidebar."
msgstr ""

#: ../../../development/templating.rst:154
msgid "``footer``"
msgstr ""

#: ../../../development/templating.rst:153
msgid ""
"The block for the footer div.  If you want a custom footer or markup before "
"or after it, override this one."
msgstr ""

#: ../../../development/templating.rst:156
msgid ""
"The following four blocks are *only* used for pages that do not have "
"assigned a list of custom sidebars in the :confval:`html_sidebars` config "
"value.  Their use is deprecated in favor of separate sidebar templates, "
"which can be included via :confval:`html_sidebars`."
msgstr ""

#: ../../../development/templating.rst:164
msgid "``sidebartoc``"
msgstr ""

#: ../../../development/templating.rst:162
msgid "The table of contents within the sidebar."
msgstr ""

#: ../../../development/templating.rst:169
msgid "``sidebarrel``"
msgstr ""

#: ../../../development/templating.rst:167
msgid "The relation links (previous, next document) within the sidebar."
msgstr ""

#: ../../../development/templating.rst:175
msgid "``sidebarsourcelink``"
msgstr ""

#: ../../../development/templating.rst:172
msgid ""
"The \"Show source\" link within the sidebar (normally only shown if this is "
"enabled by :confval:`html_show_sourcelink`)."
msgstr ""

#: ../../../development/templating.rst:182
msgid "``sidebarsearch``"
msgstr ""

#: ../../../development/templating.rst:178
msgid ""
"The search box within the sidebar.  Override this if you want to place some "
"content at the bottom of the sidebar."
msgstr ""

#: ../../../development/templating.rst:185
msgid "Configuration Variables"
msgstr ""

#: ../../../development/templating.rst:187
msgid ""
"Inside templates you can set a couple of variables used by the layout "
"template using the ``{% set %}`` tag:"
msgstr ""

#: ../../../development/templating.rst:192
msgid ""
"The delimiter for the items on the left side of the related bar.  This "
"defaults to ``' &raquo;'`` Each item in the related bar ends with the value "
"of this variable."
msgstr ""

#: ../../../development/templating.rst:198
msgid ""
"The delimiter for the items on the right side of the related bar.  This "
"defaults to ``' |'``.  Each item except of the last one in the related bar "
"ends with the value of this variable."
msgstr ""

#: ../../../development/templating.rst:202
msgid "Overriding works like this::"
msgstr ""

#: ../../../development/templating.rst:204
msgid ""
"{% extends \"!layout.html\" %}\n"
"{% set reldelim1 = ' &gt;' %}"
msgstr ""
"{% extends \"!layout.html\" %}\n"
"{% set reldelim1 = ' &gt;' %}"

#: ../../../development/templating.rst:209
msgid "Add additional script files here, like this::"
msgstr ""

#: ../../../development/templating.rst:211
msgid "{% set script_files = script_files + [\"_static/myscript.js\"] %}"
msgstr "{% set script_files = script_files + [\"_static/myscript.js\"] %}"

#: ../../../development/templating.rst:215
msgid "Please use ``.Sphinx.add_js_file()`` instead."
msgstr "請改用 ``.Sphinx.add_js_file()``。"

#: ../../../development/templating.rst:218
msgid "Helper Functions"
msgstr ""

#: ../../../development/templating.rst:220
msgid ""
"Sphinx provides various Jinja functions as helpers in the template.  You can "
"use them to generate links or output multiply used elements."
msgstr ""

#: ../../../development/templating.rst:225
msgid ""
"Return the path to a Sphinx document as a URL.  Use this to refer to built "
"documents."
msgstr ""

#: ../../../development/templating.rst:231
msgid ""
"Return the path to a *file* which is a filename relative to the root of the "
"generated output.  Use this to refer to static files."
msgstr ""

#: ../../../development/templating.rst:236
msgid "Check if a document with the name *document* exists."
msgstr ""

#: ../../../development/templating.rst:240
msgid "Return the rendered sidebar."
msgstr ""

#: ../../../development/templating.rst:244
msgid "Return the rendered relation bar."
msgstr ""

#: ../../../development/templating.rst:248
msgid "Emit a warning message."
msgstr "發出警告訊息。"

#: ../../../development/templating.rst:251
msgid "Global Variables"
msgstr ""

#: ../../../development/templating.rst:253
msgid ""
"These global variables are available in every template and are safe to use. "
"There are more, but most of them are an implementation detail and might "
"change in the future."
msgstr ""

#: ../../../development/templating.rst:259
msgid "The name of the builder (e.g. ``html`` or ``htmlhelp``)."
msgstr ""

#: ../../../development/templating.rst:263
msgid "The value of :confval:`copyright`."
msgstr ":confval:`copyright` 的值。"

#: ../../../development/templating.rst:267
msgid ""
"The title of the documentation (the value of :confval:`html_title`), except "
"when the \"single-file\" builder is used, when it is set to ``None``."
msgstr ""

#: ../../../development/templating.rst:272
msgid ""
"True if the built HTML is meant to be embedded in some viewing application "
"that handles navigation, not the web browser, such as for HTML help or Qt "
"help formats.  In this case, the sidebar is not included."
msgstr ""

#: ../../../development/templating.rst:278
msgid ""
"The relative path to the HTML favicon image from the current document, or "
"URL to the favicon, or ``''``."
msgstr ""

#: ../../../development/templating.rst:285
msgid ""
"The value of the builder's :attr:`~.SerializingHTMLBuilder.out_suffix` "
"attribute, i.e. the file name extension that the output files will get.  For "
"a standard HTML builder, this is usually ``.html``."
msgstr ""

#: ../../../development/templating.rst:291
msgid ""
"True if the reST document sources are copied (if :confval:`html_copy_source` "
"is ``True``)."
msgstr ""

#: ../../../development/templating.rst:296
msgid "The value of :confval:`language`."
msgstr ":confval:`language` 的值。"

#: ../../../development/templating.rst:300
msgid "The build date."
msgstr ""

#: ../../../development/templating.rst:304
msgid ""
"The relative path to the HTML logo image from the current document, or URL "
"to the logo, or ``''``."
msgstr ""

#: ../../../development/templating.rst:311
msgid "Same as :data:`root_doc`."
msgstr ""

#: ../../../development/templating.rst:315
msgid "Renamed to ``root_doc``."
msgstr ""

#: ../../../development/templating.rst:319
msgid "The value of :confval:`root_doc`, for usage with :func:`pathto`."
msgstr ""

#: ../../../development/templating.rst:323
msgid "Renamed from ``master_doc``."
msgstr ""

#: ../../../development/templating.rst:327
msgid ""
"The \"page name\" of the current file, i.e. either the document name if the "
"file is generated from a reST source, or the equivalent hierarchical name "
"relative to the output directory "
"(``[directory/]filename_without_extension``)."
msgstr ""

#: ../../../development/templating.rst:334
msgid "The value of :confval:`project`."
msgstr ":confval:`project` 的值。"

#: ../../../development/templating.rst:338
msgid "The value of :confval:`release`."
msgstr ":confval:`release` 的值。"

#: ../../../development/templating.rst:342
msgid ""
"A list of links to put at the left side of the relbar, next to \"next\" and "
"\"prev\".  This usually contains links to the general index and other "
"indices, such as the Python module index.  If you add something yourself, it "
"must be a tuple ``(pagename, link title, accesskey, link text)``."
msgstr ""

#: ../../../development/templating.rst:349
msgid "The value of :confval:`html_short_title`."
msgstr ":confval:`html_short_title` 的值。"

#: ../../../development/templating.rst:353
msgid "True if :confval:`html_show_sourcelink` is ``True``."
msgstr ""

#: ../../../development/templating.rst:357
msgid ""
"The version of Sphinx used to build represented as a string for example "
"\"3.5.1\"."
msgstr ""

#: ../../../development/templating.rst:361
msgid ""
"The version of Sphinx used to build represented as a tuple of five elements. "
"For Sphinx version 3.5.1 beta 3 this would be ``(3, 5, 1, 'beta', 3)``. The "
"fourth element can be one of: ``alpha``, ``beta``, ``rc``, ``final``. "
"``final`` always has 0 as the last element."
msgstr ""

#: ../../../development/templating.rst:370
msgid ""
"The version of Docutils used to build represented as a tuple of five "
"elements. For Docutils version 0.16.1 beta 2 this would be ``(0, 16, 1, "
"'beta', 2)``. The fourth element can be one of: ``alpha``, ``beta``, "
"``candidate``, ``final``. ``final`` always has 0 as the last element."
msgstr ""

#: ../../../development/templating.rst:379
msgid ""
"A list of the names of the main stylesheets as given by the theme or :"
"confval:`html_style`."
msgstr ""

#: ../../../development/templating.rst:386
msgid ""
"The name of the main stylesheet, as given by the theme or :confval:"
"`html_style`."
msgstr ""

#: ../../../development/templating.rst:391
msgid ""
"The theme or :confval:`html_style` are now able to specify multiple "
"stylesheets, the ``style`` key returns the last stylesheet when more than "
"one is specified."
msgstr ""

#: ../../../development/templating.rst:397
msgid ""
"Use the :data:`styles` key instead, as there is no longer a single main "
"stylesheet. The ``style`` key will be removed in Sphinx 7.0."
msgstr ""

#: ../../../development/templating.rst:402
msgid "The title of the current document, as used in the ``<title>`` tag."
msgstr ""

#: ../../../development/templating.rst:406
msgid "The value of :confval:`html_use_opensearch`."
msgstr ":confval:`html_use_opensearch` 的值。"

#: ../../../development/templating.rst:410
msgid "The value of :confval:`version`."
msgstr ":confval:`version` 的值。"

#: ../../../development/templating.rst:413
msgid ""
"In addition to these values, there are also all **theme options** available "
"(prefixed by ``theme_``), as well as the values given by the user in :"
"confval:`html_context`."
msgstr ""

#: ../../../development/templating.rst:417
msgid ""
"In documents that are created from source files (as opposed to automatically-"
"generated files like the module index, or documents that already are in HTML "
"form), these variables are also available:"
msgstr ""

#: ../../../development/templating.rst:423
msgid ""
"A string containing the content of the page in HTML form as produced by the "
"HTML builder, before the theme is applied."
msgstr ""

#: ../../../development/templating.rst:428
msgid "A boolean that is True if the toc contains more than one entry."
msgstr ""

#: ../../../development/templating.rst:432
msgid "Document metadata (a dictionary), see :ref:`metadata`."
msgstr ""

#: ../../../development/templating.rst:436
msgid "A string containing the page's HTML :dudir:`meta` tags."
msgstr ""

#: ../../../development/templating.rst:440
msgid ""
"The next document for the navigation.  This variable is either false or has "
"two attributes `link` and `title`.  The title contains HTML markup.  For "
"example, to generate a link to the next page, you can use this snippet::"
msgstr ""

#: ../../../development/templating.rst:444
msgid ""
"{% if next %}\n"
"<a href=\"{{ next.link|e }}\">{{ next.title }}</a>\n"
"{% endif %}"
msgstr ""

#: ../../../development/templating.rst:450
msgid ""
"The suffix of the file that was rendered. Since we support a list of :"
"confval:`source_suffix`, this will allow you to properly link to the "
"original source file."
msgstr ""

#: ../../../development/templating.rst:456
msgid ""
"A list of parent documents for navigation, structured like the :data:`next` "
"item."
msgstr ""

#: ../../../development/templating.rst:461
msgid "Like :data:`next`, but for the previous page."
msgstr ""

#: ../../../development/templating.rst:465
msgid ""
"The name of the copied source file for the current document.  This is only "
"nonempty if the :confval:`html_copy_source` value is ``True``. This has "
"empty value on creating automatically-generated files."
msgstr ""

#: ../../../development/templating.rst:471
msgid ""
"The local table of contents for the current page, rendered as HTML bullet "
"lists."
msgstr ""

#: ../../../development/templating.rst:476
msgid ""
"A callable yielding the global TOC tree containing the current page, "
"rendered as HTML bullet lists.  Optional keyword arguments:"
msgstr ""

#: ../../../development/templating.rst:482
msgid "``collapse``"
msgstr ""

#: ../../../development/templating.rst:480
msgid ""
"If true, all TOC entries that are not ancestors of the current page are "
"collapsed. ``True`` by default."
msgstr ""

#: ../../../development/templating.rst:486
msgid "``maxdepth``"
msgstr ""

#: ../../../development/templating.rst:485
msgid ""
"The maximum depth of the tree. Set it to ``-1`` to allow unlimited depth. "
"Defaults to the max depth selected in the toctree directive."
msgstr ""

#: ../../../development/templating.rst:490
msgid "``titles_only``"
msgstr ""

#: ../../../development/templating.rst:489
msgid ""
"If true, put only top-level document titles in the tree. ``False`` by "
"default."
msgstr ""

#: ../../../development/templating.rst:493
msgid "``includehidden``"
msgstr ""

#: ../../../development/templating.rst:493
msgid ""
"If true, the ToC tree will also contain hidden entries. ``False`` by default."
msgstr ""
